/**
 * (c) Copyright IBM Corporation 2011, 2017.
 * (c) Copyright HCL Technologies Ltd. 2018. All Rights Reserved.
 * This is licensed under the following license.
 * The Apache Version 2.0 License (https://www.apache.org/licenses/LICENSE-2.0.txt)
 * U.S. Government Users Restricted Rights:  Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 */
['java', 'maven', 'signing'].each {
    apply plugin: it
}
defaultTasks 'clean', 'jar', 'test'

group = 'com.ibm.urbancode.plugins'
archivesBaseName = 'uDeployRestClient'
// Use -Psnapshot=false to produce new releases
version = '1.0' + ((hasProperty('snapshot') && snapshot == 'false') ? '' : '-snapshot')

jar.archiveName "${archivesBaseName}-${version}.jar"

def username = hasProperty('ossrhUsername') ? ossrhUsername : ''
def password = hasProperty('ossrhPassword') ? ossrhPassword : ''

sourceSets {
    test {
        java {
            srcDirs = ["test/java"]
        }
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    // Main Dependencies: Maven Repo
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    runtime group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    runtime group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.4'
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    runtime group: 'commons-codec', name: 'commons-codec', version: '1.5'
    // https://mvnrepository.com/artifact/commons-lang/commons-lang
    runtime group: 'commons-lang', name: 'commons-lang', version: '2.5'
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    runtime group: 'commons-logging', name: 'commons-logging', version: '1.1'
    // https://mvnrepository.com/artifact/org.codehaus.jettison/jettison
    runtime group: 'org.codehaus.jettison', name: 'jettison', version: '1.1'
    
    // Main Dependencies: Local
    compile name: 'CommonsUtil'
    compile name: 'commons-web'
    compile name: 'HttpComponents-Util'
    compile name: 'udclient'

    // Build Dependencies
    // https://mvnrepository.com/artifact/com.googlecode.jarjar/jarjar
    compile group: 'com.googlecode.jarjar', name: 'jarjar', version: '1.3'
    
    // Test Dependencies
    // https://mvnrepository.com/artifact/junit/junit
    testCompile('junit:junit:4.12'){
		exclude group: 'org.hamcrest'
	}
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-library
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.5'
    // https://mvnrepository.com/artifact/log4j/log4j
    testCompile group: 'log4j', name: 'log4j', version: '1.2.16'
    
    
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: username, password: password)
            }
        
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: username, password: password)
            }
        
            pom.project {
                name "${group}:${archivesBaseName}"
                description 'Java REST Client for IBM UrbanCode Deploy designed for use in community plugins.'
                url 'https://github.com/IBM-UrbanCode/uDeployRestClient'
                licenses {
                    license {
                        name 'Apache License, Version 2.0'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name 'Nick Mathison'
                        email 'nhmathis@us.ibm.com'
                        organization 'IBM'
                        organizationUrl 'http://www.ibm.com'
                    }
                }
                scm {
                    connection 'scm:git:https://github.com/IBM-UrbanCode/uDeployRestClient'
                    developerConnection 'scm:git:https://github.com/IBM-UrbanCode/uDeployRestClient'
                    url 'https://github.com/IBM-UrbanCode/uDeployRestClient'
                }
            }
        }
    }
}

// Ignore Dependencies
configurations {
    compile.exclude module: 'jarjar'
}

// Build a jar containing chosen dependencies
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

// Creates a ${archivesBaseName}-${version}-sources.jar file that contains all Java source files
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java
}

// Creates a ${archivesBaseName}-${version}-javadoc.jar file that contains JavaDoc for all source files
task javaDocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives jar, sourcesJar, javaDocJar
}

/**
 * Signing requires that the following properties be defined in $GRADLE_USER_HOME/gradle.properties. $GRADLE_USER_HOME defaults to $USER_HOME/.gradle
 * signing.keyId=
 * signing.password=
 * signing.secretKeyRingFile=
 * See http://www.gradle.org/docs/current/userguide/signing_plugin.html
 */
signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task copyDocs(type: Copy) {
    from javadoc
    into('docs')
}

