['java', 'maven'].each {
    apply plugin: it
}
defaultTasks 'clean', 'jar', 'test'

archivesBaseName = 'uDeployRestClient'
// Use -Pversion=false to produce new releases
version = ((hasProperty('version') && version != "unspecified") ? version : 'oss')

jar.archiveName "${archivesBaseName}-${version}.jar"

sourceSets {
    test {
        java {
            srcDirs = ["test/java"]
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://public.dhe.ibm.com/software/products/UrbanCode/maven2/"
    }
}

dependencies {
    // Main Dependencies: Maven Repo
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    runtime group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    runtime group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.4'
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    runtime group: 'commons-codec', name: 'commons-codec', version: '1.5'
    // https://mvnrepository.com/artifact/commons-lang/commons-lang
    runtime group: 'commons-lang', name: 'commons-lang', version: '2.5'
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    runtime group: 'commons-logging', name: 'commons-logging', version: '1.2'
    // https://mvnrepository.com/artifact/org.codehaus.jettison/jettison
    runtime group: 'org.codehaus.jettison', name: 'jettison', version: '1.1'

    // Main Dependencies: UrbanCode Repo
    // https://public.dhe.ibm.com/software/products/UrbanCode/maven2/com/ibm/urbancode/commons/
    compile group: 'com.ibm.urbancode.commons', name: 'CommonsUtil', version: '+'
    compile group: 'com.ibm.urbancode.commons', name: 'commons-web', version: '+'
    compile group: 'com.ibm.urbancode.commons', name: 'HttpComponents-Util', version: '+'
    compile group: 'com.ibm.urbancode.commons', name: 'udclient', version: '+'

    // Build Dependencies
    // https://mvnrepository.com/artifact/com.googlecode.jarjar/jarjar
    compile group: 'com.googlecode.jarjar', name: 'jarjar', version: '1.4'

    //runtime group: 'com.ibm.urbancode.binaries', name: 'commons-web-util', version: '801714'
    //This maps to the pattern: [organisation]:[module]:[revision]:[classifier]@[ext]

    // Test Dependencies
    // https://mvnrepository.com/artifact/junit/junit
    testCompile('junit:junit:4.12'){
		exclude group: 'org.hamcrest'
	}
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-library
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.5'
    // https://mvnrepository.com/artifact/log4j/log4j
    testCompile group: 'log4j', name: 'log4j', version: '1.2.16'

}

// Ignore Dependencies
configurations {
    compile.exclude module: 'jarjar'
}

// Build a jar containing chosen dependencies
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

// Creates a ${archivesBaseName}-${version}-sources.jar file that contains all Java source files
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java
}

// Creates a ${archivesBaseName}-${version}-javadoc.jar file that contains JavaDoc for all source files
task javaDocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives jar, sourcesJar, javaDocJar
}

task copyDocs(type: Copy) {
    from javadoc
    into('docs')
}
